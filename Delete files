Import-Module activedirectory

Function Show-Menu () {
    
    Param(
        [Parameter(Mandatory = $True)][String]$MenuTitle,
        [Parameter(Mandatory = $True)][array]$MenuOptions
    )

    $MaxValue = $MenuOptions.count - 1
    $Selection = 0
    $EnterPressed = $False
    
    Clear-Host

    While ($EnterPressed -eq $False) {
        
        Write-Host "$MenuTitle"

        For ($i = 0; $i -le $MaxValue; $i++) {
            
            If ($i -eq $Selection) {
                Write-Host -BackgroundColor Cyan -ForegroundColor Black "[ $($MenuOptions[$i]) ]"
            }
            Else {
                Write-Host "  $($MenuOptions[$i])  "
            }

        }

        $KeyInput = $host.ui.rawui.readkey("NoEcho,IncludeKeyDown").virtualkeycode

        Switch ($KeyInput) {
            13 {
                $EnterPressed = $True
                Return $Selection
                Clear-Host
                break
            }

            38 {
                If ($Selection -eq 0) {
                    $Selection = $MaxValue
                }
                Else {
                    $Selection -= 1
                }
                Clear-Host
                break
            }

            40 {
                If ($Selection -eq $MaxValue) {
                    $Selection = 0
                }
                Else {
                    $Selection += 1
                }
                Clear-Host
                break
            }
            Default {
                Clear-Host
            }
        }
    }
}


[array]$EngagementList = @()


Get-ADOrganizationalUnit -Filter "name -like '*'" -SearchBase "path OU" -SearchScope OneLevel | ForEach-Object {
    $EngagementList += $_.name
}

    $EngagementNumber = Show-Menu -MenuTitle "Choose engagement:" -MenuOptions $EngagementList

    $Engagement = "OU=Computers,OU=" + $EngagementList[$EngagementNumber] + ",path OU"

    #exit 0

    If ($true) {


Get-ADComputer -Filter {Enable -eq "true"} -SearchBase $Engagement | ForEach-Object {

$computer = $_.name

it (Test-Connection $computer -Count 1 -Quiet)

    { Invoke-Command -ComputerName $computer -ScriptBlock {

    Get-ChildItem C:\Windows\System32\winevt\Logs\ | Where-Object Length -gt "1000000000" | ForEach-Object {

         try {
                Remove-Item $_.FullName -Force -ErrorAction SilentlyContinue
                Write-Host "Removing: $($_.FullName)"
            }
      
      catch { 

                Write-Host "Can't remove: $($_.FullName)"
            
            }
} 
}
              "$computer is done"

}
        else 

        {

        "computer no available"

        }

}
}
